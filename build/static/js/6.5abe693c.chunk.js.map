{"version":3,"sources":["pages/expenses/ExpensesSection.tsx","hooks/useForceRef.ts","pages/expenses/ExpenseListRoute.tsx","components/Button.tsx","util/roger-api-client.ts","components/spinner.svg","components/Spinner.tsx","components/SectionHeader.tsx","hooks/useIsMounted.ts","components/ErrorPanel.tsx"],"names":["Title","styled","h5","SectionItem","div","FileNameContainer","FileNameInfo","VendorNameInfo","AmountContainer","AmountInfo","DateInfo","ButtonContainer","ExpensesSection","title","items","showLoading","hideViewExpenseButton","history","useHistory","handleViewExpense","useCallback","id","push","map","item","vendorName","filename","Spinner","text","amount","createdAt","Date","toLocaleString","Button","onClick","memo","useForceRef","defaultValue","ref","useRef","React","useState","updateState","forceUpdate","value","current","UploadInput","input","ExpenseListRoute","isMounted","useIsMounted","isLoading","setIsLoading","error","setError","uploadInputRef","getItemsRef","setItems","getUploadingFilesRef","setUploadingFiles","handleAnalyzed","expense","oldItemIdx","findIndex","newItems","splice","useEffect","fetchData","undefined","client","listExpenses","expenses","on","off","handleUploadExpenses","click","handleUploadInternal","evt","target","files","newFile","fileId","uuid","uploadExpense","groupedItems","useMemo","groupBy","status","uploadingItems","transform","acc","name","SectionHeader","onChange","type","ErrorPanel","message","length","ANALYZING","UNPAID","PAID","className","color","backgroundColor","children","variant","ButtonStyled","button","css","ExpenseStatus","RogerApiClient","listeners","Map","expenseId","randomWait","storage","this","getExpensesStorage","Error","Object","values","sort","a","b","localeCompare","file","uuidv4","toISOString","updateExpensesStorage","setTimeout","faker","company","companyName","commerce","price","emit","randomLatency","changes","assign","eventName","listener","eventListeners","get","Set","set","add","delete","args","forEach","raw","localStorage","getItem","JSON","parse","callback","setItem","stringify","min","max","Math","round","random","Promise","resolve","window","_path","_defs","_path2","_excluded","_extends","bind","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSpinner","_ref","svgRef","titleId","props","xmlns","width","height","preserveAspectRatio","viewBox","fill","d","x","y","in","result","in2","filter","attributeName","dur","from","repeatCount","to","ForwardRef","SpinnerContainer","SpinnerText","span","StyledSpinnerIcon","SpinnerIcon","$size","size","Container","role"],"mappings":"kSAOMA,EAAQC,IAAOC,GAAV,6EAAGD,CAAH,sCAKLE,EAAcF,IAAOG,IAAV,mFAAGH,CAAH,yIAUXI,EAAoBJ,IAAOG,IAAV,yFAAGH,CAAH,uEAOjBK,EAAeL,IAAOG,IAAV,oFAAGH,CAAH,oBAIZM,EAAiBN,IAAOG,IAAV,sFAAGH,CAAH,uBAKdO,EAAkBP,IAAOG,IAAV,uFAAGH,CAAH,+EAOfQ,EAAaR,IAAOG,IAAV,kFAAGH,CAAH,oBAIVS,EAAWT,IAAOG,IAAV,gFAAGH,CAAH,oBAIRU,EAAkBV,IAAOG,IAAV,uFAAGH,CAAH,gEAafW,EAAkD,SAAC,GAKlD,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,sBAEMC,EAAUC,cACVC,EAAoBC,uBACxB,SAACC,GACCJ,EAAQK,KAAR,oBAA0BD,GAC3B,GACD,CAACJ,IAGH,OAAKH,EAKH,qCACE,cAACd,EAAD,UAAQa,IACPC,EAAMS,KAAI,SAACC,GACV,OAAKA,EAAKH,GAIR,eAAClB,EAAD,WACE,eAACE,EAAD,WACE,cAACE,EAAD,UAAiBiB,EAAKC,aACtB,cAACnB,EAAD,UAAekB,EAAKE,cAEtB,cAAClB,EAAD,UACGO,EACC,cAACY,EAAA,EAAD,CAASC,KAAMf,IAEf,qCACE,eAACJ,EAAD,eAAce,EAAKK,UACnB,cAACnB,EAAD,UACGc,EAAKM,WACJ,IAAIC,KAAKP,EAAKM,WAAWE,wBAKnC,cAACrB,EAAD,WACIK,GACA,cAACiB,EAAA,EAAD,CAAQC,QAAS,kBAAMV,EAAKH,IAAMF,EAAkBK,EAAKH,GAAxC,EAAjB,8BApBYG,EAAKH,IAHhB,IA8BV,OAtCI,IAyCV,EAEcc,iBAAKvB,G,iFCtHPwB,EAAc,SACzBC,GAEA,IAAMC,EAAMC,iBAAUF,GAEtB,EAAwBG,IAAMC,WAArBC,EAAT,oBACMC,EAAcH,IAAMpB,aAAY,SAACwB,GACrCN,EAAIO,QAAUD,EACdF,EAAY,CAAC,EACd,GAAE,IAMH,MAAO,CAJQtB,uBAAY,WACzB,OAAOkB,CACR,GAAE,CAACA,EAAIO,UAEQF,EACjB,ECRKG,EAAc7C,IAAO8C,MAAV,oFAAG9C,CAAH,mBAIJ+C,EAAiC,WAC5C,IAAMC,EAAYC,cAClB,EAAkCT,oBAAkB,GAApD,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA0BX,qBAA1B,mBAAOY,EAAP,KAAcC,EAAd,KACMC,EAAiBhB,iBAAyB,MAChD,EAAgCH,EAAuB,IAAvD,mBAAOoB,EAAP,KAAoBC,EAApB,KACA,EAAkDrB,EAE/C,CAAC,GAFJ,mBAAOsB,EAAP,KAA6BC,EAA7B,KAIMC,EAAiBxC,uBACrB,SAACyC,GACC,IAAMC,EAAaN,IAAcX,QAAQkB,WACvC,SAAAvC,GAAI,OAAIA,EAAKH,KAAOwC,EAAQxC,EAAxB,IAEN,IAAoB,IAAhByC,EAAJ,CAIA,IAAME,EAAQ,YAAOR,IAAcX,SACnCmB,EAASC,OAAOH,EAAY,EAAGD,GAE/BJ,EAASO,EALR,CAMF,GACD,CAACR,EAAaC,IAGhBS,qBAAU,WACR,IAAMC,EAAS,iDAAG,qGAEhBb,OAASc,GACThB,GAAa,GAHG,kBAKGiB,IAAOC,eALV,OAKdC,EALc,OAMdd,EAASc,GANK,gDAQdjB,EAAS,EAAD,IARM,yBAUdL,GAAaG,GAAa,GAVZ,4EAAH,qDAafe,GACD,GAAE,CAAClB,EAAWG,EAAcE,EAAUG,IAEvCS,qBAAU,WAGR,OAFAG,IAAOG,GAAG,kBAAmBZ,GAEtB,WACLS,IAAOI,IAAI,kBAAmBb,EAC/B,CACF,GAAE,CAACA,IAEJ,IAAMc,EAAuBtD,uBAAY,WAClCmC,EAAeV,SAIpBU,EAAeV,QAAQ8B,OACxB,GAAE,IAEGC,EAAuBxD,sBAAW,iDACtC,WAAOyD,GAAP,wFACOA,EAAIC,OAAOC,MADlB,wDAKQC,EAAUH,EAAIC,OAAOC,MAAM,GAC3BE,EAASC,MAEfvB,EAAkB,2BACbD,IAAuBb,SADX,kBAEdoC,EAASD,KAGZ1B,OAASc,GAbX,kBAgBoBC,IAAOc,cAAcH,GAhBzC,OAgBInB,EAhBJ,OAiBIJ,EAAS,GAAD,mBAAKD,IAAcX,SAAnB,CAA4BgB,KAjBxC,kDAmBIP,EAAS,EAAD,IAnBZ,yBAqBIK,EAAkB,2BACbD,IAAuBb,SADX,kBAEdoC,OAASb,KAvBhB,6EADsC,sDA4BtC,CAACZ,EAAaE,EAAsBC,EAAmBF,EAAUH,IAG7D8B,EAAeC,mBAAQ,WAC3B,OAAOC,IAAQ9B,IAAcX,SAAS,SAACrB,GAAD,OAAmBA,EAAK+D,MAAxB,GACvC,GAAE,CAAC/B,IAEEgC,EAAiBH,mBAAQ,WAC7B,OAAOI,IACL/B,IAAuBb,SACvB,SAAC6C,EAAyBlE,EAAwBH,GAChD,OAAKG,GAILkE,EAAIpE,KAAK,CACPD,KACAK,SAAUF,EAAKmE,OAEVD,GAPEA,CAQV,GACD,GAEH,GAAE,CAAChC,IAEJ,OACE,qCACE,eAACkC,EAAA,EAAD,CAAe/E,MAAM,WAArB,UACE,cAACiC,EAAD,CACER,IAAKiB,EACLsC,SAAUjB,EACVkB,KAAK,OACLzE,GAAG,SAEL,cAACY,EAAA,EAAD,CAAQC,QAASwC,EAAjB,gCAEDrB,GAAS,cAAC0C,EAAA,EAAD,CAAYnE,KAAMyB,EAAM2C,UAChC7C,EAiBA,cAACxB,EAAA,EAAD,IAhBA,qCACE,cAAC,EAAD,CACEd,MAAM,YACNE,aAAW,EACXC,uBAAqB,EACrBF,MAAO0E,EAAeS,OAAST,OAAiBpB,IAElD,cAAC,EAAD,CACEvD,MAAM,YACNE,aAAW,EACXD,MAAOsE,EAAac,YAEtB,cAAC,EAAD,CAAiBrF,MAAM,SAASC,MAAOsE,EAAae,SACpD,cAAC,EAAD,CAAiBtF,MAAM,OAAOC,MAAOsE,EAAagB,YAO3D,EAEcpD,W,sECvJTf,EAAgC,SAAC,GAOhC,IANLoE,EAMI,EANJA,UACAnE,EAKI,EALJA,QACAoE,EAII,EAJJA,MACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,SAEI,IADJC,eACI,MADM,UACN,EACJ,OACE,cAACC,EAAD,CACEL,UAAWA,EACXC,MAAOA,EACPC,gBAAiBA,EACjBrE,QAASA,EACTuE,QAASA,EALX,SAOGD,GAGN,EAEKE,EAAezG,IAAO0G,OAAV,0EAAG1G,CAAH,kLAcP,qBAAEqG,OAAoB,OAAtB,IACW,qBAAEC,iBAAwC,SAA1C,IAElB,kBACY,YADZ,EAAEE,SAEFG,YADA,4MADA,IAaA,kBACY,WADZ,EAAEH,SAEFG,YADA,4MADA,IAcWzE,mBAAKF,E,0GCnCR4E,E,4EAAAA,K,sBAAAA,E,gBAAAA,E,aAAAA,M,SASNC,E,iDACIC,UAAY,IAAIC,G,gGAMxB,WAAiBC,GAAjB,iGACQC,IADR,WAEQC,EAAUC,KAAKC,sBACRJ,GAHf,sBAIU,IAAIK,MAAJ,mBAAsBL,EAAtB,gBAJV,gCAMSE,EAAQF,IANjB,gD,kIAaA,8GACQC,IADR,cAEQC,EAAUC,KAAKC,qBAFvB,kBAGSE,OAAOC,OAAOL,GAASM,MAAK,SAACC,EAAGC,GAAJ,OACjCA,EAAE7F,UAAU8F,cAAcD,EAAE7F,UADK,KAHrC,gD,kIAgBA,WAAoB+F,GAApB,wGACQX,EAAW,IAAM,KADzB,cAIQrD,EAAmB,CACvBxC,GAAIyG,MACJhG,WAAW,IAAIC,MAAOgG,cACtBrG,SAAUmG,EAAKlC,KACfJ,OAAQsB,EAAcX,UACtBzE,WAAY,KACZI,OAAQ,MAEVuF,KAAKY,uBAAsB,SAAAb,GAEzB,OADAA,EAAQtD,EAAQxC,IAAMwC,EACfsD,CACR,IAGDc,YAAW,WACT,EAAKD,uBAAsB,SAAAb,GACzB,IAAMQ,EAAIR,EAAQtD,EAAQxC,IAM1B,OALIsG,IACFA,EAAEpC,OAASsB,EAAcV,OACzBwB,EAAElG,WAAayG,IAAMC,QAAQC,cAC7BT,EAAE9F,OAASqG,IAAMG,SAASC,SAErBnB,CACR,IACD,IAAMA,EAAU,EAAKE,qBACrB,EAAKkB,KAAK,kBAAmBpB,EAAQtD,EAAQxC,IAC9C,GAAEmH,EAAc,IAAM,MA9BzB,kBAiCS3E,GAjCT,gD,kIAyCA,WACEoD,EACAwB,GAFF,2FAIQvB,IAJR,cAKEE,KAAKY,uBAAsB,SAAAb,GACzB,IAAKA,EAAQF,GACX,MAAM,IAAIK,MAAJ,mBAAsBL,EAAtB,gBAGR,OADAM,OAAOmB,OAAOvB,EAAQF,GAAYwB,GAC3BtB,CACR,IAXH,kBAYSC,KAAKC,qBAAqBJ,IAZnC,gD,qIAkBA,WAAoBA,GAApB,2FACQC,IADR,OAEEE,KAAKY,uBAAsB,SAAAb,GAEzB,cADOA,EAAQF,GACRE,CACR,IALH,gD,2HAWA,wFACEC,KAAKY,uBAAsB,iBAAO,CAAC,CAAR,IAD7B,gD,sEAaA,SAAGW,EAAmBC,GACpB,IAAIC,EAAiBzB,KAAKL,UAAU+B,IAAIH,GACnCE,IACHA,EAAiB,IAAIE,IACrB3B,KAAKL,UAAUiC,IAAIL,EAAWE,IAEhCA,EAAeI,IAAIL,EACpB,G,iBAKD,SAAID,EAAmBC,GACrB,IAAIC,EAAiBzB,KAAKL,UAAU+B,IAAIH,GACpCE,GACFA,EAAeK,OAAON,EAEzB,G,kBAGD,SAAaD,GAA0C,IAAD,uBAAnBQ,EAAmB,iCAAnBA,EAAmB,kBACpD,IAAIN,EAAiBzB,KAAKL,UAAU+B,IAAIH,GACpCE,GACFA,EAAeO,SAAQ,SAAAR,GAAQ,OAAIA,EAAQ,WAAR,EAAYO,EAAhB,GAElC,G,gCAED,WACE,IAAME,EAAMC,aAAaC,QAAQ,sBACjC,OAAKF,EAGEG,KAAKC,MAAMJ,GAFT,CAAC,CAGX,G,mCAED,SACEK,GAEA,IAAMvC,EAAUuC,EAAStC,KAAKC,sBAC9BiC,aAAaK,QAAQ,qBAAsBH,KAAKI,UAAUzC,GAC3D,K,KAGU9C,EAAS,IAAIyC,EAO1B,SAAS0B,IAAqD,IAAvCqB,EAAsC,uDAAxB,IAAKC,EAAmB,uDAAL,IACtD,OAEIC,KAAKC,MAAMH,EAAME,KAAKE,SAAWH,EACtC,C,SAEc5C,I,qFAAf,mHAA0B2C,EAA1B,+BAAwC,IAAKC,EAA7C,+BAA2D,IAA3D,SACQ,IAAII,SAAQ,SAAAC,GAAO,OACvBC,OAAOnC,WAAWkC,EAAS3B,EAAcqB,EAAKC,GADvB,IAD3B,2C,8DCrOIO,EAAOC,EAAOC,E,cAEdC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAAiS,OAApRA,EAAWlD,OAAOmB,OAASnB,OAAOmB,OAAOgC,OAAS,SAAU5F,GAAU,IAAK,IAAI6F,EAAI,EAAGA,EAAIC,UAAU3E,OAAQ0E,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAActD,OAAOwD,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQhG,EAAOgG,GAAOD,EAAOC,GAAU,CAAE,OAAOhG,CAAQ,EAAU2F,EAASS,MAAM9D,KAAMwD,UAAY,CAElV,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKH,EAAnE7F,EAEzF,SAAuC+F,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKH,EAA5D7F,EAAS,CAAC,EAAOuG,EAAa9D,OAAO+D,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWpF,OAAQ0E,IAAOG,EAAMO,EAAWV,GAAQS,EAASG,QAAQT,IAAQ,IAAahG,EAAOgG,GAAOD,EAAOC,IAAQ,OAAOhG,CAAQ,CAFhN0G,CAA8BX,EAAQO,GAAuB,GAAI7D,OAAOkE,sBAAuB,CAAE,IAAIC,EAAmBnE,OAAOkE,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiBzF,OAAQ0E,IAAOG,EAAMY,EAAiBf,GAAQS,EAASG,QAAQT,IAAQ,GAAkBvD,OAAOwD,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgBhG,EAAOgG,GAAOD,EAAOC,GAAQ,CAAE,OAAOhG,CAAQ,CAM3e,SAAS8G,EAAWC,EAAMC,GACxB,IAAIjL,EAAQgL,EAAKhL,MACbkL,EAAUF,EAAKE,QACfC,EAAQb,EAAyBU,EAAMrB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDwB,MAAO,6BACPC,MAAO,IACPC,OAAQ,IACR9F,UAAW,WACX+F,oBAAqB,WACrBC,QAAS,cACT/J,IAAKwJ,EACL,kBAAmBC,GAClBC,GAAQnL,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAI0K,GACHlL,GAAS,KAAMwJ,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EiC,KAAM,OACNC,EAAG,kBACHlG,UAAW,QACRiE,IAAUA,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,SAAU,CAC/GjJ,GAAI,IACJ6K,MAAO,OACPC,OAAQ,OACRK,EAAG,QACHC,EAAG,SACW,gBAAoB,WAAY,CAC9CC,GAAI,gBACJC,OAAQ,WACO,gBAAoB,iBAAkB,CACrDD,GAAI,SACJC,OAAQ,YACO,gBAAoB,UAAW,CAC9CD,GAAI,gBACJE,IAAK,eACArC,IAAWA,EAAsB,gBAAoB,OAAQ,CAClE+B,KAAM,UACNC,EAAG,4oCACHM,OAAQ,WACM,gBAAoB,mBAAoB,CACtDC,cAAe,YACfC,IAAK,KACLC,KAAM,UACNC,YAAa,aACbC,GAAI,YACJpH,KAAM,aAEV,CAEA,IAAIqH,EAA0B,aAAiBvB,G,GAChC,I,MCzDTwB,EAAmBnN,IAAOG,IAAV,+EAAGH,CAAH,sCAKhBoN,EAAcpN,IAAOqN,KAAV,0EAAGrN,CAAH,uBAkBXsN,EAAoBtN,YAAOuN,GAAV,gFAAGvN,CAAH,4CACX,SAAC+L,GAAD,MAA4B,OAAhBA,EAAMyB,MAAiB,OAAS,MAA5C,IAED,SAACzB,GAAD,MAA4B,OAAhBA,EAAMyB,MAAiB,OAAS,MAA5C,IAGI9L,IAfyB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAuB,IAAjB8L,YAAiB,MAAV,KAAU,EAC/D,OACE,eAACN,EAAD,WACE,cAACG,EAAD,CAAmBE,MAAOC,IACzB9L,GAAQ,cAACyL,EAAD,UAAczL,MAG5B,C,2DClBK+L,EAAY1N,IAAOG,IAAV,8EAAGH,CAAH,oEAeA2F,IATqC,SAAC,GAAuB,IAAtB/E,EAAqB,EAArBA,MAAO2F,EAAc,EAAdA,SAC3D,OACE,eAACmH,EAAD,WACE,6BAAK9M,IACJ2F,IAGN,C,kCCrBD,6CAEatD,EAAe,WAC1B,IAAMD,EAAYV,kBAAO,GAOzB,OANA2B,qBAAU,WAER,OADAjB,EAAUJ,SAAU,EACb,WACLI,EAAUJ,SAAU,CACrB,CACF,GAAE,IACIzB,uBAAY,WACjB,OAAO6B,EAAUJ,OAClB,GAAE,GACJ,C,kCCbD,kBAMMkD,EAAwC,SAAC,GAAY,IAAXnE,EAAU,EAAVA,KAC9C,OACE,qBAAKyE,UAAU,qBAAqBuH,KAAK,QAAzC,SACGhM,GAGN,EAEcO,mBAAK4D,E","file":"static/js/6.5abe693c.chunk.js","sourcesContent":["import React, {memo, useCallback} from 'react'\nimport Button from '../../components/Button'\nimport styled from 'styled-components/macro'\nimport Spinner from '../../components/Spinner'\nimport {Expense} from '../../util/roger-api-client'\nimport {useHistory} from 'react-router-dom'\n\nconst Title = styled.h5`\n  font-size: 16px;\n  font-weight: bold;\n`\n\nconst SectionItem = styled.div`\n  display: flex;\n  border: 1px solid #f1f1f1;\n  border-radius: 4px;\n  background-color: white;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 12px;\n`\n\nconst FileNameContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst FileNameInfo = styled.div`\n  color: #8f959b;\n`\n\nconst VendorNameInfo = styled.div`\n  font-weight: bold;\n`\n\n// TODO add media query here\nconst AmountContainer = styled.div`\n  flex: 0 0 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst AmountInfo = styled.div`\n  color: #7cb87b;\n`\n\nconst DateInfo = styled.div`\n  color: #8f959b;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\ntype ExpensesSectionProps = {\n  title: string\n  items?: Partial<Expense>[]\n  showLoading?: boolean\n  hideViewExpenseButton?: boolean\n}\n\nconst ExpensesSection: React.FC<ExpensesSectionProps> = ({\n  title,\n  items,\n  showLoading,\n  hideViewExpenseButton,\n}) => {\n  const history = useHistory()\n  const handleViewExpense = useCallback(\n    (id: string) => {\n      history.push(`/expenses/${id}`)\n    },\n    [history]\n  )\n\n  if (!items) {\n    return null\n  }\n\n  return (\n    <>\n      <Title>{title}</Title>\n      {items.map((item: Partial<Expense>) => {\n        if (!item.id) {\n          return null\n        }\n        return (\n          <SectionItem key={item.id}>\n            <FileNameContainer>\n              <VendorNameInfo>{item.vendorName}</VendorNameInfo>\n              <FileNameInfo>{item.filename}</FileNameInfo>\n            </FileNameContainer>\n            <AmountContainer>\n              {showLoading ? (\n                <Spinner text={title} />\n              ) : (\n                <>\n                  <AmountInfo>${item.amount}</AmountInfo>\n                  <DateInfo>\n                    {item.createdAt &&\n                      new Date(item.createdAt).toLocaleString()}\n                  </DateInfo>\n                </>\n              )}\n            </AmountContainer>\n            <ButtonContainer>\n              {!hideViewExpenseButton && (\n                <Button onClick={() => item.id && handleViewExpense(item.id)}>\n                  View expense\n                </Button>\n              )}\n            </ButtonContainer>\n          </SectionItem>\n        )\n      })}\n    </>\n  )\n}\n\nexport default memo(ExpensesSection)\n","import React, {useCallback, useRef} from 'react'\n\n/**\n * useForceRef hook allows us to have ref/container for the state\n * across async operations\n */\nexport const useForceRef = <T extends any>(\n  defaultValue: T\n): [() => React.MutableRefObject<T>, (value: T) => void] => {\n  const ref = useRef<T>(defaultValue)\n\n  const [, updateState] = React.useState()\n  const forceUpdate = React.useCallback((value: T) => {\n    ref.current = value\n    updateState({})\n  }, [])\n\n  const getRef = useCallback(() => {\n    return ref\n  }, [ref.current]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return [getRef, forceUpdate]\n}\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport SectionHeader from '../../components/SectionHeader'\nimport Button from '../../components/Button'\nimport ExpensesSection from './ExpensesSection'\nimport {client, Expense} from '../../util/roger-api-client'\nimport groupBy from 'lodash/groupBy'\nimport transform from 'lodash/transform'\nimport styled from 'styled-components/macro'\nimport uuid from 'uuid'\nimport {useIsMounted} from '../../hooks/useIsMounted'\nimport Spinner from '../../components/Spinner'\nimport ErrorPanel from '../../components/ErrorPanel'\nimport {useForceRef} from '../../hooks/useForceRef'\n\nconst UploadInput = styled.input`\n  display: none;\n`\n\nexport const ExpenseListRoute: React.FC<{}> = () => {\n  const isMounted = useIsMounted()\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [error, setError] = useState<Error>()\n  const uploadInputRef = useRef<HTMLInputElement>(null)\n  const [getItemsRef, setItems] = useForceRef<Expense[]>([])\n  const [getUploadingFilesRef, setUploadingFiles] = useForceRef<{\n    [id: string]: File | undefined\n  }>({})\n\n  const handleAnalyzed = useCallback(\n    (expense: Expense) => {\n      const oldItemIdx = getItemsRef().current.findIndex(\n        item => item.id === expense.id\n      )\n      if (oldItemIdx === -1) {\n        return\n      }\n\n      const newItems = [...getItemsRef().current]\n      newItems.splice(oldItemIdx, 1, expense)\n\n      setItems(newItems)\n    },\n    [getItemsRef, setItems]\n  )\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let expenses\n      setError(undefined)\n      setIsLoading(true)\n      try {\n        expenses = await client.listExpenses()\n        setItems(expenses)\n      } catch (e) {\n        setError(e)\n      } finally {\n        isMounted && setIsLoading(false)\n      }\n    }\n    fetchData()\n  }, [isMounted, setIsLoading, setError, setItems])\n\n  useEffect(() => {\n    client.on('expenseAnalyzed', handleAnalyzed)\n\n    return () => {\n      client.off('expenseAnalyzed', handleAnalyzed)\n    }\n  }, [handleAnalyzed])\n\n  const handleUploadExpenses = useCallback(() => {\n    if (!uploadInputRef.current) {\n      return\n    }\n\n    uploadInputRef.current.click()\n  }, [])\n\n  const handleUploadInternal = useCallback(\n    async (evt: React.ChangeEvent<HTMLInputElement>) => {\n      if (!evt.target.files) {\n        return\n      }\n\n      const newFile = evt.target.files[0]\n      const fileId = uuid()\n\n      setUploadingFiles({\n        ...getUploadingFilesRef().current,\n        [fileId]: newFile\n      })\n\n      setError(undefined)\n      let expense\n      try {\n        expense = await client.uploadExpense(newFile)\n        setItems([...getItemsRef().current, expense])\n      } catch (e) {\n        setError(e)\n      } finally {\n        setUploadingFiles({\n          ...getUploadingFilesRef().current,\n          [fileId]: undefined\n        })\n      }\n    },\n    [getItemsRef, getUploadingFilesRef, setUploadingFiles, setItems, setError]\n  )\n\n  const groupedItems = useMemo(() => {\n    return groupBy(getItemsRef().current, (item: Expense) => item.status)\n  }, [getItemsRef])\n\n  const uploadingItems = useMemo(() => {\n    return transform(\n      getUploadingFilesRef().current,\n      (acc: Partial<Expense>[], item: File | undefined, id: string) => {\n        if (!item) {\n          return acc\n        }\n\n        acc.push({\n          id,\n          filename: item.name\n        })\n        return acc\n      },\n      []\n    )\n  }, [getUploadingFilesRef])\n\n  return (\n    <>\n      <SectionHeader title=\"Expenses\">\n        <UploadInput\n          ref={uploadInputRef}\n          onChange={handleUploadInternal}\n          type=\"file\"\n          id=\"file\"\n        />\n        <Button onClick={handleUploadExpenses}>Upload expenses</Button>\n      </SectionHeader>\n      {error && <ErrorPanel text={error.message} />}\n      {!isLoading ? (\n        <>\n          <ExpensesSection\n            title=\"Uploading\"\n            showLoading\n            hideViewExpenseButton\n            items={uploadingItems.length ? uploadingItems : undefined}\n          />\n          <ExpensesSection\n            title=\"Analyzing\"\n            showLoading\n            items={groupedItems.ANALYZING}\n          />\n          <ExpensesSection title=\"Unpaid\" items={groupedItems.UNPAID} />\n          <ExpensesSection title=\"Paid\" items={groupedItems.PAID} />\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  )\n}\n\nexport default ExpenseListRoute\n","import React, {memo} from 'react'\nimport styled, {css} from 'styled-components/macro'\n\nexport type ButtonVariants = 'primary' | 'danger'\n\ntype ButtonProps = {\n  className?: string\n  children: React.ReactNode\n  disabled?: boolean\n  onClick: (evt?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n  color?: string\n  backgroundColor?: string\n  variant?: ButtonVariants\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  className,\n  onClick,\n  color,\n  backgroundColor,\n  children,\n  variant = 'primary',\n}) => {\n  return (\n    <ButtonStyled\n      className={className}\n      color={color}\n      backgroundColor={backgroundColor}\n      onClick={onClick}\n      variant={variant}\n    >\n      {children}\n    </ButtonStyled>\n  )\n}\n\nconst ButtonStyled = styled.button<{\n  color?: string\n  backgroundColor?: string\n  variant?: ButtonVariants\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  padding: 5px 10px;\n  user-select: none;\n\n  color: ${({color}) => color || 'white'};\n  background-color: ${({backgroundColor}) => backgroundColor || '#371e88'};\n\n  ${({variant}) =>\n    variant === 'primary' &&\n    css`\n      background-color: #0071b1;\n      &:hover,\n      &:focus {\n        filter: brightness(112%);\n      }\n      &:active {\n        filter: brightness(124%);\n      }\n    `}\n\n  ${({variant}) =>\n    variant === 'danger' &&\n    css`\n      background-color: #d73814;\n      &:hover,\n      &:focus {\n        filter: brightness(112%);\n      }\n      &:active {\n        filter: brightness(124%);\n      }\n    `}\n`\n\nexport default memo(Button)\n","import uuidv4 from 'uuid/v4'\nimport faker from 'faker'\n\n/**\n * Shape of a expense.\n */\nexport interface Expense {\n  /**\n   * Automatically generated by the \"backend\".\n   */\n  id: string\n\n  /**\n   * ISO 8601\n   */\n  createdAt: string\n\n  /**\n   * Name of file that was uploaded for the expense.\n   */\n  filename: string\n\n  /**\n   * The expense's current status. See `ExpenseStatus` for a description of a expense's\n   * life cycle.\n   */\n  status: ExpenseStatus\n\n  /**\n   * When uploaded, this field will be `null`. When expense analysis completes, it\n   * will be populated with the vendor's name.\n   */\n  vendorName: string | null\n\n  /**\n   * When uploaded, this field will be `null`. When expense analysis completes, it\n   * will be populated with the amount due.\n   */\n  amount: string | null\n}\n\n/**\n * Newly uploaded expenses start out as being analyzed. After a period of time,\n * they become unpaid. When a user marks them as such, they become paid.\n */\nexport enum ExpenseStatus {\n  ANALYZING = 'ANALYZING',\n  UNPAID = 'UNPAID',\n  PAID = 'PAID'\n}\n\n/**\n * Fake implementation of a primitive API that handles expenses.\n */\nclass RogerApiClient {\n  private listeners = new Map<string, Set<Listener>>()\n\n  /**\n   * Finds a single expense by its ID and resolves with it. Will reject if the expense\n   * does not exist.\n   */\n  async getExpense(expenseId: string): Promise<Expense> {\n    await randomWait()\n    const storage = this.getExpensesStorage()\n    if (!storage[expenseId]) {\n      throw new Error(`Expense '${expenseId}' not found`)\n    }\n    return storage[expenseId]\n  }\n\n  /**\n   * Resolves with a list of all expenses sorted by `createdAt` in descending\n   * order.\n   */\n  async listExpenses(): Promise<Expense[]> {\n    await randomWait()\n    const storage = this.getExpensesStorage()\n    return Object.values(storage).sort((a, b) =>\n      b.createdAt.localeCompare(b.createdAt)\n    )\n  }\n\n  /**\n   * Takes a `File` object, which the user has selected for upload. Uploads the\n   * file (which takes a few seconds), and then resolves with a new `Expense`\n   * object with status=ANALYZING.\n   *\n   * After a random period of time, the expense will be analyzed and be marked as\n   * paid. Listen for `expenseAnalyzed` events through the `on` method.\n   */\n  async uploadExpense(file: File): Promise<Expense> {\n    await randomWait(2000, 4000)\n\n    // Insert expense\n    const expense: Expense = {\n      id: uuidv4(),\n      createdAt: new Date().toISOString(),\n      filename: file.name,\n      status: ExpenseStatus.ANALYZING,\n      vendorName: null,\n      amount: null\n    }\n    this.updateExpensesStorage(storage => {\n      storage[expense.id] = expense\n      return storage\n    })\n\n    // After a random timeout, we're done analyzing\n    setTimeout(() => {\n      this.updateExpensesStorage(storage => {\n        const b = storage[expense.id]\n        if (b) {\n          b.status = ExpenseStatus.UNPAID\n          b.vendorName = faker.company.companyName()\n          b.amount = faker.commerce.price()\n        }\n        return storage\n      })\n      const storage = this.getExpensesStorage()\n      this.emit('expenseAnalyzed', storage[expense.id])\n    }, randomLatency(3000, 8000))\n\n    // Return the expense\n    return expense\n  }\n\n  /**\n   * Updates a single expense. Only keys included in `changes` are changed - other\n   * keys are left intact. Resolves with updated `Expense` object. Rejects if expense\n   * does not exist.\n   */\n  async patchExpense(\n    expenseId: string,\n    changes: Partial<Expense>\n  ): Promise<Expense> {\n    await randomWait()\n    this.updateExpensesStorage(storage => {\n      if (!storage[expenseId]) {\n        throw new Error(`Expense '${expenseId}' not found`)\n      }\n      Object.assign(storage[expenseId], changes)\n      return storage\n    })\n    return this.getExpensesStorage()[expenseId]\n  }\n\n  /**\n   * Deletes a expense and resolves when successful. Idempotent.\n   */\n  async deleteExpense(expenseId: string): Promise<void> {\n    await randomWait()\n    this.updateExpensesStorage(storage => {\n      delete storage[expenseId]\n      return storage\n    })\n  }\n\n  /**\n   * Resets the database by deleting all expenses.\n   */\n  async reset(): Promise<void> {\n    this.updateExpensesStorage(() => ({}))\n  }\n\n  /**\n   * Register a listener for events from the \"back-end\". `listener` will be\n   * called when events of the given `eventName` are emitted. The following\n   * events are supported:\n   *\n   * - `expenseAnalyzed`: Called when analisis completes for a expense. Listener will\n   *   be called with the `Expense` object that was updated.\n   */\n  on(eventName: 'expenseAnalyzed', listener: (expense: Expense) => void): void\n  on(eventName: string, listener: Listener): void {\n    let eventListeners = this.listeners.get(eventName)\n    if (!eventListeners) {\n      eventListeners = new Set()\n      this.listeners.set(eventName, eventListeners)\n    }\n    eventListeners.add(listener)\n  }\n\n  /**\n   * Removes a listener previously registered with `on`.\n   */\n  off(eventName: string, listener: Listener) {\n    let eventListeners = this.listeners.get(eventName)\n    if (eventListeners) {\n      eventListeners.delete(listener)\n    }\n  }\n\n  private emit(eventName: 'expenseAnalyzed', expense: Expense): void\n  private emit(eventName: string, ...args: any[]): void {\n    let eventListeners = this.listeners.get(eventName)\n    if (eventListeners) {\n      eventListeners.forEach(listener => listener(...args))\n    }\n  }\n\n  private getExpensesStorage(): ExpensesStorage {\n    const raw = localStorage.getItem('roger-tht-expenses')\n    if (!raw) {\n      return {}\n    }\n    return JSON.parse(raw)\n  }\n\n  private updateExpensesStorage(\n    callback: (storage: ExpensesStorage) => ExpensesStorage\n  ) {\n    const storage = callback(this.getExpensesStorage())\n    localStorage.setItem('roger-tht-expenses', JSON.stringify(storage))\n  }\n}\n\nexport const client = new RogerApiClient()\n\n// Utility types and functions\ntype Listener = (...args: any[]) => void\n\ntype ExpensesStorage = {[id: string]: Expense}\n\nfunction randomLatency(min: number = 200, max: number = 500) {\n  return process.env.NODE_ENV === 'test'\n    ? 1\n    : Math.round(min + Math.random() * max)\n}\n\nasync function randomWait(min: number = 200, max: number = 500) {\n  await new Promise(resolve =>\n    window.setTimeout(resolve, randomLatency(min, max))\n  )\n}\n","var _path, _defs, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSpinner(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 200,\n    height: 200,\n    className: \"uil-ring\",\n    preserveAspectRatio: \"xMidYMid\",\n    viewBox: \"0 0 100 100\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h100v100H0z\",\n    className: \"bk\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"a\",\n    width: \"300%\",\n    height: \"300%\",\n    x: \"-100%\",\n    y: \"-100%\"\n  }, /*#__PURE__*/React.createElement(\"feOffset\", {\n    in: \"SourceGraphic\",\n    result: \"offOut\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    in: \"offOut\",\n    result: \"blurOut\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    in: \"SourceGraphic\",\n    in2: \"blurOut\"\n  })))), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#009DE0\",\n    d: \"M10 50s0 .5.1 1.4c0 .5.1 1 .2 1.7 0 .3.1.7.1 1.1.1.4.1.8.2 1.2.2.8.3 1.8.5 2.8.3 1 .6 2.1.9 3.2.3 1.1.9 2.3 1.4 3.5.5 1.2 1.2 2.4 1.8 3.7.3.6.8 1.2 1.2 1.9.4.6.8 1.3 1.3 1.9 1 1.2 1.9 2.6 3.1 3.7 2.2 2.5 5 4.7 7.9 6.7 3 2 6.5 3.4 10.1 4.6 3.6 1.1 7.5 1.5 11.2 1.6 4-.1 7.7-.6 11.3-1.6 3.6-1.2 7-2.6 10-4.6 3-2 5.8-4.2 7.9-6.7 1.2-1.2 2.1-2.5 3.1-3.7.5-.6.9-1.3 1.3-1.9.4-.6.8-1.3 1.2-1.9.6-1.3 1.3-2.5 1.8-3.7.5-1.2 1-2.4 1.4-3.5.3-1.1.6-2.2.9-3.2.2-1 .4-1.9.5-2.8.1-.4.1-.8.2-1.2 0-.4.1-.7.1-1.1.1-.7.1-1.2.2-1.7.1-.9.1-1.4.1-1.4V54.2c0 .4-.1.8-.1 1.2-.1.9-.2 1.8-.4 2.8-.2 1-.5 2.1-.7 3.3-.3 1.2-.8 2.4-1.2 3.7-.2.7-.5 1.3-.8 1.9-.3.7-.6 1.3-.9 2-.3.7-.7 1.3-1.1 2-.4.7-.7 1.4-1.2 2-1 1.3-1.9 2.7-3.1 4-2.2 2.7-5 5-8.1 7.1L70 85.7c-.8.5-1.7.9-2.6 1.3l-1.4.7-1.4.5c-.9.3-1.8.7-2.8 1C58 90.3 53.9 90.9 50 91l-3-.2c-1 0-2-.2-3-.3l-1.5-.2-.7-.1-.7-.2c-1-.3-1.9-.5-2.9-.7-.9-.3-1.9-.7-2.8-1l-1.4-.6-1.3-.6c-.9-.4-1.8-.8-2.6-1.3l-2.4-1.5c-3.1-2.1-5.9-4.5-8.1-7.1-1.2-1.2-2.1-2.7-3.1-4-.5-.6-.8-1.4-1.2-2-.4-.7-.8-1.3-1.1-2-.3-.7-.6-1.3-.9-2-.3-.7-.6-1.3-.8-1.9-.4-1.3-.9-2.5-1.2-3.7-.3-1.2-.5-2.3-.7-3.3-.2-1-.3-2-.4-2.8-.1-.4-.1-.8-.1-1.2v-2.8c-.1-1-.1-1.5-.1-1.5z\",\n    filter: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"1s\",\n    from: \"0 50 50\",\n    repeatCount: \"indefinite\",\n    to: \"360 50 50\",\n    type: \"rotate\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.7efe2c74.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport {ReactComponent as SpinnerIcon} from './spinner.svg'\n\nconst SpinnerContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst SpinnerText = styled.span`\n  margin-left: 10px;\n`\n\ntype SpinnerProps = {\n  text?: string\n  size?: 'sm' | 'md'\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({text, size = 'md'}) => {\n  return (\n    <SpinnerContainer>\n      <StyledSpinnerIcon $size={size} />\n      {text && <SpinnerText>{text}</SpinnerText>}\n    </SpinnerContainer>\n  )\n}\n\nconst StyledSpinnerIcon = styled(SpinnerIcon)<{$size: 'sm' | 'md'}>`\n  height: ${(props) => (props.$size === 'sm' ? '1rem' : '2rem')};\n  margin-right: 8px;\n  width: ${(props) => (props.$size === 'sm' ? '1rem' : '2rem')};\n`\n\nexport default Spinner\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype SectionHeaderProps = {\n  title: string\n  children: React.ReactNode\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nconst SectionHeader: React.FC<SectionHeaderProps> = ({title, children}) => {\n  return (\n    <Container>\n      <h2>{title}</h2>\n      {children}\n    </Container>\n  )\n}\n\nexport default SectionHeader\n","import {useCallback, useEffect, useRef} from 'react'\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n    return function cleanup(): void {\n      isMounted.current = false\n    }\n  }, [])\n  return useCallback((): boolean => {\n    return isMounted.current\n  }, [])\n}\n","import React, {memo} from 'react'\n\ntype ErrorPanelProps = {\n  text?: string\n}\n\nconst ErrorPanel: React.FC<ErrorPanelProps> = ({text}) => {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      {text}\n    </div>\n  )\n}\n\nexport default memo(ErrorPanel)\n"],"sourceRoot":""}