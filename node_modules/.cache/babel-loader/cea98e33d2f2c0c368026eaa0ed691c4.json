{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\n/**\n * useForceRef hook allows us to have ref/container for the state\n * across async operations\n */\n\nexport const useForceRef = defaultValue => {\n  _s();\n\n  const ref = useRef(defaultValue);\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(value => {\n    ref.current = value;\n    updateState({});\n  }, []);\n  const getRef = useCallback(() => {\n    return ref;\n  }, [ref.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return [getRef, forceUpdate];\n};\n\n_s(useForceRef, \"sJoPwRUHlAOE26QAp2jetP6zjUo=\");","map":{"version":3,"names":["React","useCallback","useRef","useForceRef","defaultValue","ref","updateState","useState","forceUpdate","value","current","getRef"],"sources":["/Users/macbook/Desktop/corpayone-michael-two/src/hooks/useForceRef.ts"],"sourcesContent":["import React, {useCallback, useRef} from 'react'\n\n/**\n * useForceRef hook allows us to have ref/container for the state\n * across async operations\n */\nexport const useForceRef = <T extends any>(\n  defaultValue: T\n): [() => React.MutableRefObject<T>, (value: T) => void] => {\n  const ref = useRef<T>(defaultValue)\n\n  const [, updateState] = React.useState()\n  const forceUpdate = React.useCallback((value: T) => {\n    ref.current = value\n    updateState({})\n  }, [])\n\n  const getRef = useCallback(() => {\n    return ref\n  }, [ref.current]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return [getRef, forceUpdate]\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,MAA5B,QAAyC,OAAzC;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GACtBC,YADyB,IAEiC;EAAA;;EAC1D,MAAMC,GAAG,GAAGH,MAAM,CAAIE,YAAJ,CAAlB;EAEA,MAAM,GAAGE,WAAH,IAAkBN,KAAK,CAACO,QAAN,EAAxB;EACA,MAAMC,WAAW,GAAGR,KAAK,CAACC,WAAN,CAAmBQ,KAAD,IAAc;IAClDJ,GAAG,CAACK,OAAJ,GAAcD,KAAd;IACAH,WAAW,CAAC,EAAD,CAAX;EACD,CAHmB,EAGjB,EAHiB,CAApB;EAKA,MAAMK,MAAM,GAAGV,WAAW,CAAC,MAAM;IAC/B,OAAOI,GAAP;EACD,CAFyB,EAEvB,CAACA,GAAG,CAACK,OAAL,CAFuB,CAA1B,CAT0D,CAWxC;;EAElB,OAAO,CAACC,MAAD,EAASH,WAAT,CAAP;AACD,CAhBM;;GAAML,W"},"metadata":{},"sourceType":"module"}