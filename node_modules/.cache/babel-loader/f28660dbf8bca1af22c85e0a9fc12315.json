{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/macbook/Desktop/corpayone-michael-two/src/pages/expenses/ExpenseListRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport SectionHeader from '../../components/SectionHeader';\nimport Button from '../../components/Button';\nimport ExpensesSection from './ExpensesSection';\nimport { client } from '../../util/roger-api-client';\nimport groupBy from 'lodash/groupBy';\nimport transform from 'lodash/transform';\nimport uuid from 'uuid';\nimport { useIsMounted } from '../../hooks/useIsMounted';\nimport Spinner from '../../components/Spinner';\nimport ErrorPanel from '../../components/ErrorPanel';\nimport { useForceRef } from '../../hooks/useForceRef';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadInput = _styled.input.withConfig({\n  displayName: \"ExpenseListRoute__UploadInput\",\n  componentId: \"sc-18y3qim-0\"\n})([\"display:none;\"]);\n\nexport const ExpenseListRoute = () => {\n  _s();\n\n  const isMounted = useIsMounted();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const uploadInputRef = useRef(null);\n  const [getItemsRef, setItems] = useForceRef([]);\n  const [getUploadingFilesRef, setUploadingFiles] = useForceRef({});\n  const handleAnalyzed = useCallback(expense => {\n    const oldItemIdx = getItemsRef().current.findIndex(item => item.id === expense.id);\n\n    if (oldItemIdx === -1) {\n      return;\n    }\n\n    const newItems = [...getItemsRef().current];\n    newItems.splice(oldItemIdx, 1, expense);\n    setItems(newItems);\n  }, [getItemsRef, setItems]);\n  useEffect(() => {\n    const fetchData = async () => {\n      let expenses;\n      setError(undefined);\n      setIsLoading(true);\n\n      try {\n        expenses = await client.listExpenses();\n        setItems(expenses);\n      } catch (e) {\n        setError(e);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [isMounted, setIsLoading, setError, setItems]);\n  useEffect(() => {\n    client.on('expenseAnalyzed', handleAnalyzed);\n    return () => {\n      client.off('expenseAnalyzed', handleAnalyzed);\n    };\n  }, [handleAnalyzed]);\n  const handleUploadExpenses = useCallback(() => {\n    if (!uploadInputRef.current) {\n      return;\n    }\n\n    uploadInputRef.current.click();\n  }, []);\n  const handleUploadInternal = useCallback(async evt => {\n    if (!evt.target.files) {\n      return;\n    }\n\n    const newFile = evt.target.files[0];\n    const fileId = uuid();\n    setUploadingFiles({ ...getUploadingFilesRef().current,\n      [fileId]: newFile\n    });\n    setError(undefined);\n    let expense;\n\n    try {\n      expense = await client.uploadExpense(newFile);\n      setItems([...getItemsRef().current, expense]);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setUploadingFiles({ ...getUploadingFilesRef().current,\n        [fileId]: undefined\n      });\n    }\n  }, [getItemsRef, getUploadingFilesRef, setUploadingFiles, setItems, setError]);\n  const groupedItems = useMemo(() => {\n    return groupBy(getItemsRef().current, item => item.status);\n  }, [getItemsRef]);\n  const uploadingItems = useMemo(() => {\n    return transform(getUploadingFilesRef().current, (acc, item, id) => {\n      if (!item) {\n        return acc;\n      }\n\n      acc.push({\n        id,\n        filename: item.name\n      });\n      return acc;\n    }, []);\n  }, [getUploadingFilesRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: \"Expenses\",\n      children: [/*#__PURE__*/_jsxDEV(UploadInput, {\n        ref: uploadInputRef,\n        onChange: handleUploadInternal,\n        type: \"file\",\n        id: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUploadExpenses,\n        children: \"Upload expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorPanel, {\n      text: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), !isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ExpensesSection, {\n        title: \"Uploading\",\n        showLoading: true,\n        hideViewExpenseButton: true,\n        items: uploadingItems.length ? uploadingItems : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesSection, {\n        title: \"Analyzing\",\n        showLoading: true,\n        items: groupedItems.ANALYZING\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesSection, {\n        title: \"Unpaid\",\n        items: groupedItems.UNPAID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesSection, {\n        title: \"Paid\",\n        items: groupedItems.PAID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExpenseListRoute, \"YZPs0nf15y9nJ7g9QgPCEd83uUk=\", false, function () {\n  return [useIsMounted, useForceRef, useForceRef];\n});\n\n_c = ExpenseListRoute;\nexport default ExpenseListRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseListRoute\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","SectionHeader","Button","ExpensesSection","client","groupBy","transform","uuid","useIsMounted","Spinner","ErrorPanel","useForceRef","UploadInput","styled","input","ExpenseListRoute","isMounted","isLoading","setIsLoading","error","setError","uploadInputRef","getItemsRef","setItems","getUploadingFilesRef","setUploadingFiles","handleAnalyzed","expense","oldItemIdx","current","findIndex","item","id","newItems","splice","fetchData","expenses","undefined","listExpenses","e","on","off","handleUploadExpenses","click","handleUploadInternal","evt","target","files","newFile","fileId","uploadExpense","groupedItems","status","uploadingItems","acc","push","filename","name","message","length","ANALYZING","UNPAID","PAID"],"sources":["/Users/macbook/Desktop/corpayone-michael-two/src/pages/expenses/ExpenseListRoute.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport SectionHeader from '../../components/SectionHeader'\nimport Button from '../../components/Button'\nimport ExpensesSection from './ExpensesSection'\nimport {client, Expense} from '../../util/roger-api-client'\nimport groupBy from 'lodash/groupBy'\nimport transform from 'lodash/transform'\nimport styled from 'styled-components/macro'\nimport uuid from 'uuid'\nimport {useIsMounted} from '../../hooks/useIsMounted'\nimport Spinner from '../../components/Spinner'\nimport ErrorPanel from '../../components/ErrorPanel'\nimport {useForceRef} from '../../hooks/useForceRef'\n\nconst UploadInput = styled.input`\n  display: none;\n`\n\nexport const ExpenseListRoute: React.FC<{}> = () => {\n  const isMounted = useIsMounted()\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [error, setError] = useState<Error>()\n  const uploadInputRef = useRef<HTMLInputElement>(null)\n  const [getItemsRef, setItems] = useForceRef<Expense[]>([])\n  const [getUploadingFilesRef, setUploadingFiles] = useForceRef<{\n    [id: string]: File | undefined\n  }>({})\n\n  const handleAnalyzed = useCallback(\n    (expense: Expense) => {\n      const oldItemIdx = getItemsRef().current.findIndex(\n        item => item.id === expense.id\n      )\n      if (oldItemIdx === -1) {\n        return\n      }\n\n      const newItems = [...getItemsRef().current]\n      newItems.splice(oldItemIdx, 1, expense)\n\n      setItems(newItems)\n    },\n    [getItemsRef, setItems]\n  )\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let expenses\n      setError(undefined)\n      setIsLoading(true)\n      try {\n        expenses = await client.listExpenses()\n        setItems(expenses)\n      } catch (e) {\n        setError(e)\n      } finally {\n        isMounted && setIsLoading(false)\n      }\n    }\n    fetchData()\n  }, [isMounted, setIsLoading, setError, setItems])\n\n  useEffect(() => {\n    client.on('expenseAnalyzed', handleAnalyzed)\n\n    return () => {\n      client.off('expenseAnalyzed', handleAnalyzed)\n    }\n  }, [handleAnalyzed])\n\n  const handleUploadExpenses = useCallback(() => {\n    if (!uploadInputRef.current) {\n      return\n    }\n\n    uploadInputRef.current.click()\n  }, [])\n\n  const handleUploadInternal = useCallback(\n    async (evt: React.ChangeEvent<HTMLInputElement>) => {\n      if (!evt.target.files) {\n        return\n      }\n\n      const newFile = evt.target.files[0]\n      const fileId = uuid()\n\n      setUploadingFiles({\n        ...getUploadingFilesRef().current,\n        [fileId]: newFile\n      })\n\n      setError(undefined)\n      let expense\n      try {\n        expense = await client.uploadExpense(newFile)\n        setItems([...getItemsRef().current, expense])\n      } catch (e) {\n        setError(e)\n      } finally {\n        setUploadingFiles({\n          ...getUploadingFilesRef().current,\n          [fileId]: undefined\n        })\n      }\n    },\n    [getItemsRef, getUploadingFilesRef, setUploadingFiles, setItems, setError]\n  )\n\n  const groupedItems = useMemo(() => {\n    return groupBy(getItemsRef().current, (item: Expense) => item.status)\n  }, [getItemsRef])\n\n  const uploadingItems = useMemo(() => {\n    return transform(\n      getUploadingFilesRef().current,\n      (acc: Partial<Expense>[], item: File | undefined, id: string) => {\n        if (!item) {\n          return acc\n        }\n\n        acc.push({\n          id,\n          filename: item.name\n        })\n        return acc\n      },\n      []\n    )\n  }, [getUploadingFilesRef])\n\n  return (\n    <>\n      <SectionHeader title=\"Expenses\">\n        <UploadInput\n          ref={uploadInputRef}\n          onChange={handleUploadInternal}\n          type=\"file\"\n          id=\"file\"\n        />\n        <Button onClick={handleUploadExpenses}>Upload expenses</Button>\n      </SectionHeader>\n      {error && <ErrorPanel text={error.message} />}\n      {!isLoading ? (\n        <>\n          <ExpensesSection\n            title=\"Uploading\"\n            showLoading\n            hideViewExpenseButton\n            items={uploadingItems.length ? uploadingItems : undefined}\n          />\n          <ExpensesSection\n            title=\"Analyzing\"\n            showLoading\n            items={groupedItems.ANALYZING}\n          />\n          <ExpensesSection title=\"Unpaid\" items={groupedItems.UNPAID} />\n          <ExpensesSection title=\"Paid\" items={groupedItems.PAID} />\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  )\n}\n\nexport default ExpenseListRoute\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}